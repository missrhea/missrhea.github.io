{"version":3,"sources":["webpack:///./src/components/list.module.css","webpack:///./src/components/writinglist.js","webpack:///./src/pages/writing.tsx"],"names":["module","exports","WritingList","allMarkdownRemark","edges","map","node","title","frontmatter","fields","slug","key","className","styles","writinglist","to","date","pageQuery","Writing","data","location","siteTitle","site","siteMetadata"],"mappings":"8EACAA,EAAOC,QAAU,CAAC,YAAc,kCAAkC,YAAc,oC,yJCwD/DC,EA9CG,WAyBd,OAvBQ,OAsBSC,kBAAkBC,MAE3BC,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACLC,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KACpD,OACE,yBAAKC,IAAKL,EAAKG,OAAOC,KAAME,UAAWC,IAAOC,aAC1C,2BACI,kBAAC,OAAD,CAAMC,GAAIT,EAAKG,OAAOC,MACrBH,IAGL,8BAAOD,EAAKE,YAAYQ,W,wBCE3BC,GAFEC,UAhBC,SAAC,GAAwC,IAAtCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,SAEjBC,EAAYF,EAAKG,KAAKC,aAAahB,MAEvC,OACA,kBAAC,IAAD,CAAQa,SAAUA,EAAUb,MAAOc,GACjC,kBAAC,IAAD,CAAKd,MAAM,YACX,6BACA,uCACA,6BACA,kBAAC,EAAD,SAQmB,e","file":"component---src-pages-writing-tsx-a4dd82595884fdae503e.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"writinglist\":\"list-module--writinglist--Wo3rK\",\"readinglist\":\"list-module--readinglist--wDjII\"};","/**\n * WritingList component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\nimport styles from './list.module.css'\n\nconst WritingList = () => {\n\n    const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC },\n                          filter: {fileAbsolutePath: {regex: \"/content/writing/\"}}) {\n          edges {\n            node {\n              excerpt\n              timeToRead\n              fields {\n                slug\n              }\n              frontmatter {\n                date(formatString: \"DD/MM/YYYY\")\n                title\n                description\n              }\n            }\n          }\n        }\n      }\n    `)\n\n    const posts = data.allMarkdownRemark.edges\n      return (\n        posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <div key={node.fields.slug} className={styles.writinglist}>\n                <a>\n                    <Link to={node.fields.slug}>\n                    {title}\n                    </Link>\n                </a>\n                <time>{node.frontmatter.date}</time>\n                {/* <p> */}\n                    {/* {node.frontmatter.description} */}\n                    {/* <p className={styles.timeToRead}> {node.timeToRead} min read </p> */}\n                {/* </p> */}\n            </div>\n          )\n        })\n      )\n  }\n  \n  export default WritingList\n\n","import React from 'react'\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport WritingList from \"../components/writinglist\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\ntype Data = {\n    site: {\n      siteMetadata: {\n        title: string\n      }\n    }\n    allMarkdownRemark: {\n      edges: {\n        node: {\n          excerpt: string\n          frontmatter: {\n            title: string\n            date: string\n            description: string\n          }\n          fields: {\n            slug: string\n          }\n        }\n      }[]\n    }\n  }\n\nconst Writing = ({ data, location }: PageProps<Data>) => {\n\n  const siteTitle = data.site.siteMetadata.title\n\n    return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"Writing\" />\n      <div>\n      <h1>Writing</h1>\n      <hr></hr>\n      <WritingList/>\n      </div>\n    </Layout>\n    )\n}\n\nexport default Writing\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`"],"sourceRoot":""}