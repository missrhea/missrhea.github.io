{"version":3,"sources":["webpack:///./src/components/list.module.css","webpack:///./src/components/readinglist.js","webpack:///./src/pages/reading.tsx"],"names":["module","exports","ReadingList","allMarkdownRemark","edges","map","node","title","frontmatter","key","fields","slug","className","styles","readinglist","to","author","date","rating","pageQuery","Reading","data","location","siteTitle","site","siteMetadata"],"mappings":"8EACAA,EAAOC,QAAU,CAAC,YAAc,kCAAkC,YAAc,oC,0ooCCuD/DC,EA7CG,WA0BhB,OAxBU,OAsBSC,kBAAkBC,MAG7BC,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACLC,EAAQD,EAAKE,YAAYD,MAC/B,OACE,yBAAKE,IAAKH,EAAKI,OAAOC,KAAMC,UAAWC,IAAOC,aAC1C,2BACI,kBAAC,OAAD,CAAMC,GAAIT,EAAKI,OAAOC,MACrBJ,IAGL,2BAAID,EAAKE,YAAYQ,QACrB,8BAAOV,EAAKE,YAAYS,MACxB,2BAAIX,EAAKE,YAAYU,a,wBCAtBC,GAFEC,UAhBC,SAAC,GAAwC,IAAtCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,SAEjBC,EAAYF,EAAKG,KAAKC,aAAalB,MAEvC,OACA,kBAAC,IAAD,CAAQe,SAAUA,EAAUf,MAAOgB,GACjC,kBAAC,IAAD,CAAKhB,MAAM,YACX,6BACA,uCACA,6BACA,kBAAC,EAAD,SAQmB","file":"component---src-pages-reading-tsx-96ec5a196a10b0c4b4a4.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"writinglist\":\"list-module--writinglist--Wo3rK\",\"readinglist\":\"list-module--readinglist--wDjII\"};","/**\n * WritingList component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\nimport styles from './list.module.css'\n\nconst ReadingList = () => {\n\n    const data = useStaticQuery(graphql`\n    query {\n        allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC },\n            filter: {fileAbsolutePath: {regex: \"/content/reading/\"}}) {\n          edges {\n            node {\n              excerpt\n              fields {\n                slug\n              } \n              frontmatter {\n                date(formatString:\"DD/MM/YYYY\")\n                author\n                rating\n                title\n              }\n            }\n          }\n        }\n      }\n    `)\n\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      posts.map(({ node }) => {\n        const title = node.frontmatter.title\n        return (\n          <div key={node.fields.slug} className={styles.readinglist}>\n              <a>\n                  <Link to={node.fields.slug}>\n                  {title}\n                  </Link>\n              </a>\n              <p>{node.frontmatter.author}</p>\n              <time>{node.frontmatter.date}</time>\n              <p>{node.frontmatter.rating}</p>\n          </div>\n        )\n      })\n    )\n  }\n  \n  export default ReadingList","import React from 'react'\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport ReadingList from \"../components/readinglist\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\ntype Data = {\n    site: {\n      siteMetadata: {\n        title: string\n      }\n    }\n    allMarkdownRemark: {\n      edges: {\n        node: {\n          excerpt: string\n          frontmatter: {\n            title: string\n            date: string\n            author: string\n            rating: string\n          }\n          fields: {\n            slug: string\n          }\n        }\n      }[]\n    }\n  }\n\nconst Reading = ({ data, location }: PageProps<Data>) => {\n\n  const siteTitle = data.site.siteMetadata.title\n\n    return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"Reading\" />\n      <div>\n      <h1>Reading</h1>\n      <hr></hr>\n      <ReadingList/>\n      </div>\n    </Layout>\n    )\n}\n\nexport default Reading\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`"],"sourceRoot":""}